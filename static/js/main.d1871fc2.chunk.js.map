{"version":3,"sources":["components/Contact/Contact.jsx","routes/Home/Search/Search.jsx","routes/Home/Home.jsx","routes/EditContact/EditContact.jsx","routes/AddContact/AddContact.jsx","routes/NotFound/NotFound.jsx","routes/ContactDetails/ContactDetails.jsx","components/App/App.jsx","index.js","components/Contact/Contact.module.css"],"names":["Contact","phoneContact","deleteContact","toggleCheckbox","editContact","isSelected","className","styles","container","card","onclick","id","style","backgroundColor","firstName","lastName","email","notes","primaryNumber","workNumber","linkDetails","to","pathname","state","currentContact","type","checked","onChange","btnDeleteContact","onClick","iconBtnDeleteContact","linkEditContact","Search","isOpenSearch","display","Home","props","useState","contacts","setContacts","selectedContacts","setSelectedContacts","searchTerm","setSearchTerm","searchedContacts","setSearchedContacts","ssss","setSss","zzz","setZzz","console","log","useEffect","fetch","then","response","json","data","handleDelete","contactId","headers","method","updatedContacts","filter","contact","catch","error","updatedSelectedContacts","contactsLen","length","selectedContactsLen","Object","keys","event","target","value","placeholder","sss","toLowerCase","includes","disabled","newSelectedContacts","forEach","map","EditContact","history","useHistory","params","useParams","loading","setLoading","undefined","locationState","location","setContact","onInputChange","updatedContact","JSON","parse","stringify","name","goBack","body","push","from","AddContact","isOpen","closeModal","saveContact","NotFound","ContactDetails","gitHub","skype","details","setDetails","App","path","exact","render","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d1871fc2.chunk.js","sourcesContent":["// import \"./Contact.css\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport { FaTrashAlt } from 'react-icons/fa';\n\nimport styles from \"./Contact.module.css\";\n\nconst Contact = ({\n  phoneContact,\n  deleteContact,\n  editContact,\n  toggleCheckbox,\n  isSelected,\n}) =>  (\n  <div>\n  \n  <div className={styles.container} >\n    <div className={styles.card}\n    onclick={() => toggleCheckbox(phoneContact.id)}\n      style={{ backgroundColor: isSelected ? \"#9e9e9e\" : \"#8080801f\" }}\n      \n    >\n      <div>\n        <div className={styles.phoneContact}>{phoneContact.firstName}</div>\n        <div className={styles.phoneContact}>{phoneContact.lastName}</div>\n        <div className={styles.phoneContact}>{phoneContact.email}</div>\n        <div className={styles.phoneContact}>{phoneContact.notes}</div>\n      </div>\n      <div className=\"phone-numbers\">\n        <div className={styles.phoneContact}>{phoneContact.primaryNumber}</div>\n        <div className={styles.phoneContact}>{phoneContact.workNumber}</div>\n        \n        <div>\n        <Link className={styles.linkDetails}\n      to={{\n        pathname: `/details/${phoneContact.id}`,\n        state: { currentContact: phoneContact },\n      }}\n    >\n      Contact Details\n    </Link>\n        </div>\n      </div>\n    </div>\n    <input\n      type=\"checkbox\"\n      checked={isSelected}\n      onChange={() => toggleCheckbox(phoneContact.id)}\n    />\n    <button className={styles.btnDeleteContact} onClick={() => deleteContact(phoneContact.id)} ><FaTrashAlt className={styles.iconBtnDeleteContact}/></button>\n    <Link className={styles.linkEditContact}\n      to={{\n        pathname: `/edit-contact/${phoneContact.id}`,\n        state: { currentContact: phoneContact },\n      }}\n    >\n      Edit\n    </Link>\n  </div>\n  \n  </div>\n);\n\n\n\nexport default Contact;\n","import \"./Search.css\";\r\n\r\n\r\nconst Search = ({ isOpenSearch }) => {\r\nreturn (\r\n    <div className=\"search-modal\" style={{ display: isOpenSearch ? \"flex\" : \"none\" }}>\r\n        <p className=\"search-p\">No such contact</p>\r\n    </div>\r\n);\r\n};\r\nexport default Search;","import { useEffect, useState } from \"react\";\nimport Contact from \"../../components/Contact/Contact\";\nimport { Link } from \"react-router-dom\";\n\nimport Search from \"./Search/Search\";\nimport OpenNoContact from \"./OpenNoContact/OpenNoContact\";\n\nimport { FaTrashAlt, FaSearch, FaPlus } from 'react-icons/fa';\n\nimport \"./Home.css\";\n\nconst Home = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [selectedContacts, setSelectedContacts] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchedContacts, setSearchedContacts] = useState([]);\n  const [noContact, setNoContact] = useState(false);\n\n  const [ssss, setSss] = useState(false);\n  const [zzz, setZzz] = useState(false);\n  \n  console.log(\"Home, props\", props);\n\n  useEffect(() => {\n    console.log(\"Home component mounted\");\n    fetch(\"http://localhost:3004/contacts\")\n      .then((response) => response.json())\n      .then((data) => setContacts(data));\n    return () => {\n      console.log(\"Home component unmounted\");\n    };\n  }, []);\n\n  const handleDelete = (contactId) => {\n    //you can choose below copy version if you have\n    //primitive element in array\n    //const updatedContacts = [...contacts];\n    console.log(\"contactId\", contactId);\n    fetch(`http://localhost:3004/contacts/${contactId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"DELETE\",\n    })\n      .then(() => {\n        const updatedContacts = contacts.filter(\n          (contact) => contact.id !== contactId\n        );\n        setContacts(updatedContacts);\n      })\n      .catch((error) => console.log(\"Delete error\", error));\n  };\n\n  \n\n  const onSearchInputChange = (event) => {\n    setSearchTerm(event.target.value);\n      \n    \n  };\n\n  const searchButton = () => {\n    \n    const sss = contacts.filter((contact) => \n    contact.firstName.toLowerCase().includes(searchTerm.toLowerCase())) \n    setSearchedContacts(sss);\n    console.log(sss)\n\n    if (sss.length == 0 ) {\n      setZzz(true);\n    } else {\n      setZzz(false);\n    }\n    setSss(true);\n    \n  };\n\n  const resetBtn = () => {\n    setSss(false);\n    setZzz(false);\n  }\n\n  const toggleCheckbox = (contactId) => {\n    const updatedSelectedContacts = { ...selectedContacts }; // selectedContacts-ը կոպյա է անում\n    if (selectedContacts[contactId]) {\n      delete updatedSelectedContacts[contactId];\n    } else {\n      updatedSelectedContacts[contactId] = true;\n    }\n\n    setSelectedContacts(updatedSelectedContacts);\n    \n    console.log(updatedSelectedContacts[contactId])\n    \n  };\n\n  const onSelectAll = (event) => {\n    const newSelectedContacts = {};\n\n    if (event.target.checked) {\n      contacts.forEach((contact) => {\n        newSelectedContacts[contact.id] = true;\n      });\n    \n    }\n    \n    setSelectedContacts(newSelectedContacts);\n  };\n  const contactsLen = contacts.length;\n  const selectedContactsLen = Object.keys(selectedContacts).length;\n\n  const deleteSelectedContacts = (contactId) => {\n\n    fetch(`http://localhost:3004/contacts/${contactId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"DELETE\",\n    })\n      .then(() => {\n        const updatedContacts = contacts.filter(\n          (contact) => !selectedContacts[contact.id]\n        );\n        setContacts(updatedContacts);\n      })\n      .catch((error) => console.log(\"Delete error\", error));\n\n\n  };\n\n  const a = () => { \n      setNoContact(true)  \n  };\n\n  const b = () => { \n    setNoContact(false)  \n};\n\n  \n  \n  return (\n    <div>\n      <div className=\"header\">\n        <div className=\"contact-manager\">CONTACT  MANAGER</div>\n\n        <div className=\"div-search\">\n         <div className=\"div-search-inline\">\n           <input onChange={onSearchInputChange} className=\"search-input\" placeholder=\"Contact name .....\"/>\n           \n         </div>\n         <div className=\"div-icon-search\"><FaSearch/></div>\n         <div className=\"div-search-reset-btn\">\n          <button className=\"btn-search\" onClick={searchButton}>search</button>\n          <button className=\"btn-search\" onClick={resetBtn}>reset</button>\n         </div>\n         {/* <button onClick={ddd}>fff</button> */}\n        </div>\n\n        <div className=\"del-link\">\n          <button \n          onClick={deleteSelectedContacts}\n          disabled={selectedContactsLen <= 0}>Delete All <FaTrashAlt /></button>\n          \n          <div className=\"div-link-add-contact\">\n            <Link className=\"link-add-contact\"\n            to={{\n              pathname: \"/add-contact\",\n            // state: { currentContact: phoneContact },\n            }}\n            >\n            <div className=\"icon-link-add-contact\">add contact<FaPlus className=\"icon-add-contact\" /></div>\n            </Link>\n          </div>  \n      \n        \n      </div>\n\n      \n\n      </div>\n       <div className=\"div-fon\">\n         <div className=\"div-himnakan\">\n            \n           <div className=\"div-inner-himnakan\">\n             <div className=\"div-checkbox-p\">\n                <input type=\"checkbox\"\n                className=\"input-checkbox\"\n                onChange={onSelectAll} \n                disabled={contactsLen <= 0}\n                checked={contactsLen == selectedContactsLen && contactsLen !== 0}/> \n                <p className=\"p-select-all\">select All</p>\n                \n              </div>\n          <div className=\"contact\"  style={{ display: ssss ? \"none\" : \"block\" }}>\n            {contacts.map((contact) =>  (\n             <Contact\n                key={contact.id}\n                phoneContact={contact}\n                deleteContact={handleDelete}\n                toggleCheckbox={toggleCheckbox}\n                isSelected={selectedContacts[contact.id] ? true : false}\n              />\n              \n          ))}\n          </div>\n\n          <div  className=\"contact\" style={{ display: ssss ? \"block\" : \"none\" }}>\n            {searchedContacts.map((contact) => (\n              <Contact\n                key={contact.id}\n                phoneContact={contact}\n                deleteContact={handleDelete}\n                toggleCheckbox={toggleCheckbox}\n                isSelected={selectedContacts[contact.id] ? true : false}\n              />\n            ))}\n          </div>\n\n          <div>\n            <Search\n              isOpenSearch={zzz}  \n            />\n          </div>\n          <div>\n            \n          \n             \n          </div>\n      </div>\n         <div className=\"div-right\"></div>\n      </div>\n              \n     </div>\n          <div className=\"div-futer\">\n              <p className=\"p-futer\">Copyright © 2021 || Contact Manager || author : Artyom Apanyan</p>\n          </div>\n    </div>\n  );\n};\n\nexport default Home;\n","//If you use React version < 17.x.x\n//then import React\n// import React from 'react'\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\n\nimport \"./EditContact.css\";\n\n\n\nconst setInitialContact = (locationState) =>\n  locationState === undefined\n    ? {\n        id: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        primaryNumber: \"\",\n        workNumber: \"\",\n        notes: \"\",\n      }\n    : locationState.currentContact;\n\nconst EditContact = (props) => {\n  const history = useHistory();\n  const params = useParams();\n\n  // const [contact, setContact] = useState(currentContact);\n  const [loading, setLoading] = useState(false);\n  const [contact, setContact] = useState(() =>\n    setInitialContact(props.location.state)\n  );\n\n  useEffect(() => {\n    if (props.location.state === undefined) {\n      setLoading(true)\n      fetch(`http://localhost:3004/contacts/${params.id}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setContact(data)\n          setLoading(false)\n        });\n        \n    }\n  }, []);\n\n  const onInputChange = (event) => {\n    const updatedContact = JSON.parse(JSON.stringify(contact));\n    updatedContact[event.target.name] = event.target.value;\n    setContact(updatedContact);\n  };\n\n  const saveContact = () => {\n    fetch(`http://localhost:3004/contacts/${contact.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"PUT\",\n      body: JSON.stringify(contact),\n    })\n      .then((response) => response.json())\n      .then(() => {\n        history.push(\"/\", { from: \"Edit Contact\" });\n      });\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <p className=\"p-add-contact\">add contact</p>\n      <div className=\"edit-card\">\n      <div className=\"add-card-left\">\n            <p className=\"p-left-card\">firstName :</p>\n            <p className=\"p-left-card\">lastName :</p>\n            <p className=\"p-left-card\">Email :</p>\n            <p className=\"p-left-card\">Notes :</p>\n            <p className=\"p-left-card\">primaryNumber :</p>\n            <p className=\"p-left-card\">workNumber :</p>\n\n          </div>\n        <div>\n          <div className=\"edit-contact-input-block\">\n            <input\n              className=\"edit-contact-input\"\n              placeholder=\"First name\"\n              name=\"firstName\"\n              value={contact.firstName}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"edit-contact-input-block\">\n            <input\n              className=\"edit-contact-input\"\n              placeholder=\"Last name\"\n              name=\"lastName\"\n              value={contact.lastName}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"edit-contact-input-block\">\n            <input\n              className=\"edit-contact-input\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={contact.email}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"edit-contact-input-block\">\n            <input\n              className=\"edit-contact-input\"\n              placeholder=\"Primary number\"\n              name=\"primaryNumber\"\n              value={contact.primaryNumber}\n              onChange={onInputChange}\n            />\n          </div>\n        \n          <div className=\"edit-contact-input-block\">\n            <input\n              className=\"edit-contact-input\"\n              placeholder=\"Work number\"\n              name=\"workNumber\"\n              value={contact.workNumber}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"edit-contact-input-block\">\n            <input\n              className=\"edit-contact-input\"\n              placeholder=\"Notes\"\n              name=\"notes\"\n              value={contact.notes}\n              onChange={onInputChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"edit-contact-buttons\">\n      <button className=\"edit-cansel\" onClick={() => history.goBack()}>Close</button>\n      <button className=\"edit-save\" onClick={saveContact}>Save</button>\n      </div>\n      <ClockLoader loading={loading}/>\n\n      <div className=\"div-futer\">\n              <p className=\"p-futer\">Copyright © 2021 || Contact Manager || author : Artyom Apanyan</p>\n          </div>\n      </div>\n    \n  );\n};\n\nexport default EditContact;\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./AddContact.css\";\r\n\r\nconst AddContact = ({ isOpen, closeModal, saveContact }) => {\r\n  const [contact, setContact] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    primaryNumber: \"\",\r\n    workNumber: \"\",\r\n    notes: \"\",\r\n  });\r\n  \r\n  const history = useHistory()\r\n\r\n  const onInputChange = (event) => {\r\n    const updatedContact = JSON.parse(JSON.stringify(contact));\r\n    updatedContact[event.target.name] = event.target.value;\r\n    setContact(updatedContact);\r\n  };\r\n\r\n  const onContactSave = () => {\r\n    fetch(\"http://localhost:3004/contacts\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(contact),\r\n    })\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      });\r\n  };\r\n\r\n  return (  \r\n      <div className=\"div-bacgraund\">\r\n        <p className=\"p-add-contact\">add contact</p>\r\n        <div className=\"add-card\">\r\n          <div className=\"add-card-left\">\r\n            <p className=\"p-left-card\">firstName :</p>\r\n            <p className=\"p-left-card\">lastName :</p>\r\n            <p className=\"p-left-card\">Email :</p>\r\n            <p className=\"p-left-card\">Notes :</p>\r\n            <p className=\"p-left-card\">primaryNumber :</p>\r\n            <p className=\"p-left-card\">workNumber :</p>\r\n\r\n          </div>\r\n          <div className=\"add-card-right\">\r\n          <div className=\"div-firstname\"> \r\n            <input\r\n              className=\"add-contact-input\"\r\n              placeholder=\"First name\"\r\n              name=\"firstName\"\r\n              value={contact.firstName}\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"add-contact-input-block\">\r\n            <input\r\n              className=\"add-contact-input\"\r\n              placeholder=\"Last name\"\r\n              name=\"lastName\"\r\n              value={contact.lastName}\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"add-contact-input-block\">\r\n            <input\r\n              className=\"add-contact-input\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              value={contact.email}\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"add-contact-input-block\">\r\n            <input\r\n              className=\"add-contact-input\"\r\n              placeholder=\"Notes\"\r\n              name=\"notes\"\r\n              value={contact.notes}\r\n              onChange={onInputChange}\r\n            />\r\n            </div>\r\n          <div className=\"add-contact-input-block\">\r\n            <input\r\n              className=\"add-contact-input\"\r\n              placeholder=\"Primary number\"\r\n              name=\"primaryNumber\"\r\n              value={contact.primaryNumber}\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"add-contact-input-block\">\r\n            <input\r\n              className=\"add-contact-input\"\r\n              placeholder=\"Work number\"\r\n              name=\"workNumber\"\r\n              value={contact.workNumber}\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          \r\n          </div>\r\n          </div>\r\n      \r\n      <div className=\"add-contact-buttons\">\r\n        <button className=\"cansel\" onClick={() => history.goBack()}>Cancel</button>\r\n        <button className=\"save\" onClick={onContactSave}>Save</button>\r\n      </div>\r\n      <div className=\"div-futer\">\r\n              <p className=\"p-futer\">Copyright © 2021 || Contact Manager || author : Artyom Apanyan</p>\r\n          </div>\r\n    </div>\r\n     \r\n    \r\n  );\r\n};\r\n\r\nexport default AddContact;","const NotFound = () => <div>Not Found</div>;\n\nexport default NotFound;\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\n\r\nimport \"./ContactDetails.css\";\r\n\r\n\r\nconst setInitialContact = (locationState) =>\r\n  locationState === undefined\r\n    ? {\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        primaryNumber: \"\",\r\n        workNumber: \"\",\r\n        notes: \"\",\r\n        \r\n      }\r\n    : locationState.currentContact;\r\n\r\n    const setInitialDetails = (locationState) =>\r\n    locationState === undefined\r\n    ?\r\n    {\r\n        gitHub: \"\",\r\n        skype: \"\",\r\n    }\r\n    : locationState.currentContact; \r\n      \r\n\r\n      \r\n      \r\n\r\nconst ContactDetails = (props) => {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n  const [contact, setContact] = useState(() =>\r\n    setInitialContact(props.location.state)\r\n  );\r\n  const [details, setDetails] = useState(() =>\r\n  setInitialDetails(props.location.state)\r\n  );\r\n\r\n  useEffect(() => {\r\n    \r\n      setLoading(true)\r\n\r\n      fetch(`http://localhost:3004/details/${params.id}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n\r\n        setDetails(data)\r\n        \r\n    });\r\n\r\n      fetch(`http://localhost:3004/contacts/${params.id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setContact(data)\r\n          setLoading(false)\r\n        });\r\n        \r\n       \r\n    \r\n  }, []);\r\n\r\n    console.log()\r\n  \r\n\r\n    return (\r\n        <div className=\"edit-container\">\r\n          <div>\r\n            <div>\r\n              <div>\r\n                firstName : {contact.firstName} \r\n              </div>\r\n              <div>\r\n                  lastName : {contact.lastName}\r\n              </div>\r\n              <div>\r\n                  email : {contact.email}\r\n              </div>\r\n              <div>\r\n                  primaryNumber : {contact.primaryNumber}\r\n              </div>\r\n            </div>\r\n    \r\n            <div>\r\n              <div>\r\n                  workNumber : {contact.workNumber}\r\n              </div>\r\n              <div>\r\n                  notes : {contact.notes}\r\n              </div>\r\n              <div>\r\n              gitHub : {details.gitHub}\r\n              </div>\r\n              <div>\r\n              skype : {details.skype}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button onClick={() => history.goBack()}>back</button>\r\n          {/* <button onClick={saveContact}>Save</button> */}\r\n          <ClockLoader loading={loading}/>\r\n          </div>\r\n        \r\n      );\r\n};\r\n\r\nexport default ContactDetails;","import {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Home from \"../../routes/Home/Home\";\nimport EditContact from \"../../routes/EditContact/EditContact\";\nimport AddContact from \"../../routes/AddContact/AddContact\";\nimport NotFound from \"../../routes/NotFound/NotFound\";\nimport ContactDetails from \"../../routes/ContactDetails/ContactDetails\";\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact render={(props) => <Home {...props} />} />\n      <Route\n        path=\"/add-contact\"\n        render={(props) => <AddContact {...props} />}\n      />\n      <Route\n        path=\"/edit-contact/:id\"\n        render={(props) => <EditContact {...props} />}\n      />\n      <Route\n        path=\"/details/:id\"\n        render={(props) => <ContactDetails {...props} />}\n      />\n      <Route path=\"/not-found\" render={(props) => <NotFound {...props} />} />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-container\":\"Contact_contact-container__jbNo4\",\"container\":\"Contact_container__3TptW\",\"card\":\"Contact_card__2bDeL\",\"link\":\"Contact_link__3Ogw0\",\"btnDeleteContact\":\"Contact_btnDeleteContact__34X28\",\"iconBtnDeleteContact\":\"Contact_iconBtnDeleteContact__1FMyA\",\"phoneContact\":\"Contact_phoneContact__15Lzl\",\"linkEditContact\":\"Contact_linkEditContact__1_Ci8\",\"linkDetails\":\"Contact_linkDetails__2W4Hp\"};"],"sourceRoot":""}